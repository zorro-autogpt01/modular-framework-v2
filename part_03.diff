diff --git a/modular-framework/modules/llm-tester/src/rag.js b/modular-framework/modules/llm-tester/src/rag.js
index 73b4959..cbaadc8 100644
--- a/modular-framework/modules/llm-tester/src/rag.js
+++ b/modular-framework/modules/llm-tester/src/rag.js
@@ -1,5 +1,5 @@
 import fetch from "node-fetch";
-import { logError, logDebug } from "./logger.js";
+import { logError, logDebug, logInfo } from "./logger.js";
 
 function rag(path) {
 const base = process.env.EDGE_BASE;
 if (!base) throw new Error("EDGE_BASE is required");
 const b = base.endsWith("/") ? base.slice(0, -1) : base;
@@ -8,6 +8,8 @@ function rag(path) {
 
 export async function retrieve({ question, top_k = 4 }) {
 logDebug("RAG retrieve request", { question, top_k }, "rag");
+  // Log the full query content for Splunk
+  try { logInfo("RAG retrieve query", { question, top_k }, "rag"); } catch {}
 
 let response;
 try {
@@ -57,6 +59,13 @@ export async function retrieve({ question, top_k = 4 }) {
 snippetCount: snippets.length,
 totalLength: snippets.join("").length 
 }, "rag");
+  // Log full snippets content for Splunk visibility
+  try {
+    logInfo("RAG retrieve snippets", {
+      question,
+      snippetCount: snippets.length,
+      snippetsText: snippets.join("\n---\n")
+    }, "rag");
+  } catch {}
 
 return snippets.join("\n---\n");
 }
 
