# =========================
# edge-nginx (standardized)
# =========================

events { worker_connections 1024; }

http {
  # ---------- Core ----------
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Logs
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  sendfile on;
  keepalive_timeout 65;
  client_max_body_size 20m;  # default JSON/form limit (override per-location)

  # Gzip (static + JSON)
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 512;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
  gzip_vary on;

  # ---------- Upgrade & CORS ----------
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Restrictive CORS: allow localhost/dev and module hostnames only
  map $http_origin $cors_origin {
    default "";
    "~^https?://[^/]+\.local(:[0-9]+)?$"           "$http_origin";
    "~^https?://localhost(:[0-9]+)?$"              "$http_origin";
    "~^https?://127\.0\.0\.1(:[0-9]+)?$"           "$http_origin";
    "~^https?://llm-chat-module(:[0-9]+)?$"        "$http_origin";
    "~^https?://github-hub-module(:[0-9]+)?$"      "$http_origin";
    "~^https?://llm-workflows-module(:[0-9]+)?$"   "$http_origin";
    "~^https?://llm-gateway(:[0-9]+)?$"            "$http_origin";
    "~^https?://llm-documentor(:[0-9]+)?$"         "$http_origin";
    "~^https?://llm-tester(:[0-9]+)?$"             "$http_origin";
    "~^https?://ssh-terminal-module(:[0-9]+)?$"    "$http_origin";
    "~^https?://rag-api-module(:[0-9]+)?$"         "$http_origin";
    "~^https?://llm-runner-controller(:[0-9]+)?$"  "$http_origin";
  }

  # Reusable CORS headers
  map "" $cors_headers { default "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Request-Id,Traceparent,Tracestate,Idempotency-Key"; }
  map "" $cors_methods { default "GET, POST, PUT, PATCH, DELETE, OPTIONS"; }

  # ---------- HTTP :80 ----------
  map $http_host $host_no_port { ~^(?<h>[^:]+) $h; }
  server {
    listen 80;
    server_name _;
    location = /health { access_log off; return 200 "edge-ok\n"; add_header Content-Type text/plain; }
    return 308 https://$host_no_port:8443$request_uri;
  }

  # ---------- HTTPS :443 ----------
  server {
    listen 443 ssl http2;
    server_name _;

    # TLS (dev/demo; replace in prod)
    ssl_certificate     /etc/nginx/certs/dev.crt;
    ssl_certificate_key /etc/nginx/certs/dev.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Content-Security-Policy "frame-ancestors 'self'" always;

    # Health (edge only)
    location = /health { access_log off; return 200 "edge-ok\n"; add_header Content-Type text/plain; }

    # -------- Root UI (framework) --------
    location / {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;
      proxy_pass http://framework-web:80;
    }

    # =======================================================
    #            Canonical API v1 (public surface)
    # =======================================================

    # --- LLM Gateway ---
    # New canonical: /api/v1/gateway/...
   # Strip ONLY when the path is /api/v1/gateway/api/...
    location ~ ^/api/v1/gateway/api/(.*)$ {
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_request_buffering off;
      proxy_read_timeout 86400;

      # CORS headers (as you have)
      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      # rewrite to /api/<rest> and pass through unchanged after rewrite
      rewrite ^/api/v1/gateway/api/(.*)$ /api/$1 break;
      proxy_pass http://llm-gateway:3010;
    }

    # Everything else under /api/v1/gateway/ goes straight through, preserving the remainder
    location ^~ /api/v1/gateway/ {
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_request_buffering off;
      proxy_read_timeout 86400;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-gateway:3010/;  # /api/v1/gateway/admin â†’ /admin
    }
    # --- LLM Chat ---
    location /api/v1/chat/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-chat-module:3004/;
    }

    # --- LLM Workflows ---
    location /api/v1/workflows/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-workflows-module:3005/;
    }

    # UI path for Workflows
    location /workflows/ {
      rewrite ^/workflows/(.*)$ /$1 break;

      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      proxy_read_timeout 86400;
      proxy_pass http://llm-workflows-module:3005/;
    }

    # --- LLM Runner Controller ---
    location /api/llm-runner/ {
      proxy_http_version 1.1;
      proxy_buffering off;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-runner-controller:4015/api/llm-runner/;
    }
    location /install/runner.sh {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_pass http://llm-runner-controller:4015/install/runner.sh;
    }
    location /install/systemd.sh {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_pass http://llm-runner-controller:4015/install/systemd.sh;
    }

    # --- LLM Tester ---
    location /api/v1/tester/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 86400;
      proxy_redirect off;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-tester:3040/;
    }

    # --- GitHub Hub ---
    location /api/v1/github/ {
      proxy_http_version 1.1;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://github-hub-module:3002/;
    }

    # --- LLM Documentor ---
    location /api/v1/documentor/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 600;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-documentor:3030/;
    }

    # --- RAG ---
    location /api/v1/rag/ {
      proxy_http_version 1.1;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://rag-api-module:8000/;
    }

    # --- SSH Terminal (REST + WS) ---
    location /api/v1/ssh-terminal/ {
      proxy_http_version 1.1;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://ssh-terminal-module:3001/;
    }
    # WebSocket bridge: /api/v1/ssh-terminal/ssh
    location = /api/v1/ssh-terminal/ssh {
      proxy_http_version 1.1;
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_read_timeout 86400;
      proxy_pass http://ssh-terminal-module:3001/ssh;
    }

    # -------- Legacy redirects (strip old prefixes correctly) --------

    # Gateway
    rewrite ^/llm-gateway/api/(.*)$ /api/v1/gateway/api/$1 permanent;
    rewrite ^/llm-gateway/(.*)$      /api/v1/gateway/$1      permanent;

    # Workflows API (legacy path)
    rewrite ^/api/llm-workflows/(.*)$ /api/v1/workflows/$1 permanent;

    # Workflows UI (legacy â†’ new UI prefix)
    rewrite ^/llm-workflows(.*)$ /workflows$1 permanent;

    # Tester
    rewrite ^/api/llm-tester/(.*)$ /api/v1/tester/$1 permanent;
    rewrite ^/llm-tester/(.*)$     /api/v1/tester/$1 permanent;

    # GitHub Hub
    rewrite ^/api/github-hub/(.*)$ /api/v1/github/$1 permanent;

    # Documentor
    rewrite ^/api/documentor/(.*)$ /api/v1/documentor/$1 permanent;
    rewrite ^/documentor/(.*)$     /api/v1/documentor/$1 permanent;

    # RAG
    rewrite ^/rag/(.*)$ /api/v1/rag/$1 permanent;

    # SSH Terminal
    rewrite ^/api/ssh-terminal/(.*)$ /api/v1/ssh-terminal/$1 permanent;

    # -------- Module-agnostic meta (optional) --------
    # location = /openapi.yaml { root /usr/share/nginx/html; }
    # location = /docs         { root /usr/share/nginx/html; try_files /docs/index.html =404; }
  }
}
