# =========================
# edge-nginx (standardized)
# =========================

events { worker_connections 1024; }

http {
  # ---------- Core ----------
  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  # Logs
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  sendfile on;
  keepalive_timeout 65;
  client_max_body_size 20m;  # default JSON/form limit (override per-location)

  # Gzip (static + JSON)
  gzip on;
  gzip_comp_level 5;
  gzip_min_length 512;
  gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript image/svg+xml;
  gzip_vary on;

  # ---------- Upgrade & CORS ----------
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # Restrictive CORS: allow localhost/dev and module hostnames only
  map $http_origin $cors_origin {
    default "";
    "~^https?://[^/]+\.local(:[0-9]+)?$"           "$http_origin";
    "~^https?://localhost(:[0-9]+)?$"              "$http_origin";
    "~^https?://127\.0\.0\.1(:[0-9]+)?$"           "$http_origin";
    "~^https?://llm-chat-module(:[0-9]+)?$"        "$http_origin";
    "~^https?://github-hub-module(:[0-9]+)?$"      "$http_origin";
    "~^https?://llm-workflows-module(:[0-9]+)?$"   "$http_origin";
    "~^https?://llm-gateway(:[0-9]+)?$"            "$http_origin";
    "~^https?://llm-documentor(:[0-9]+)?$"         "$http_origin";
    "~^https?://llm-tester(:[0-9]+)?$"             "$http_origin";
    "~^https?://ssh-terminal-module(:[0-9]+)?$"    "$http_origin";
    "~^https?://rag-api-module(:[0-9]+)?$"         "$http_origin";    "~^https?://llm-runner-controller(:[0-9]+)?$" "$http_origin";

  }

  # Reusable CORS headers
  map "" $cors_headers { default "DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization,X-Request-Id,Traceparent,Tracestate,Idempotency-Key"; }
  map "" $cors_methods { default "GET, POST, PUT, PATCH, DELETE, OPTIONS"; }

  # Macro-like snippet via 'set' + include is not native; we inline headers per location for clarity.

  # ---------- HTTP :80 ----------
  server {
    listen 80;
    server_name _;

    # Health (for container orchestration)
    location = /health { access_log off; return 200 "edge-ok\n"; add_header Content-Type text/plain; }

    # (Optional) Allow in-cluster HTTP calls to avoid TLS loops for specific internal APIs if you need it:
    # location /api/v1/llm-tester/ { proxy_pass http://llm-tester:3040/; } # Keep commented unless required.

    # Everything else -> HTTPS
    location / { return 301 https://$host$request_uri; }
  }

  # ---------- HTTPS :443 ----------
  server {
    listen 443 ssl http2;
    server_name _;

    # TLS (dev/demo; replace in prod)
    ssl_certificate     /etc/nginx/certs/dev.crt;
    ssl_certificate_key /etc/nginx/certs/dev.key;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;

    # Security headers
    add_header X-Frame-Options SAMEORIGIN always;
    add_header Content-Security-Policy "frame-ancestors 'self'" always;

    # Health (edge only)
    location = /health { access_log off; return 200 "edge-ok\n"; add_header Content-Type text/plain; }

    # -------- Root UI (framework) --------
    location / {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;
      proxy_pass http://framework-web:80;
    }

    # =======================================================
    #            Canonical API v1 (public surface)
    # =======================================================

    # --- LLM Gateway ---
    # NEW: /api/v1/gateway/...     (old: /llm-gateway/ and /llm-gateway/api/)
    location /api/v1/gateway/ {
      proxy_http_version 1.1;
      proxy_buffering off;                 # streaming/SSE friendly
      proxy_request_buffering off;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      # CORS
      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-gateway:3010/;
    }

    # Redirect legacy paths -> new (308 keeps method/body)
    location ~* ^/(llm-gateway/(api/)?) {
      # was /llm-gateway/ and /llm-gateway/api/
      return 308 /api/v1/gateway/$request_uri;
    }

    # --- LLM Chat ---
    # NEW: /api/v1/chat/...         (old: /api/llm-chat/)
    location /api/v1/chat/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 86400;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-chat-module:3004/;
    }
    location ~* ^/api/llm-chat/ {
      # was /api/llm-chat/
      return 308 /api/v1/chat$request_uri;
    }

    # --- LLM Workflows ---
    # NEW: /api/v1/workflows/...    (old: /api/llm-workflows/)
    location /api/v1/workflows/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 86400;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-workflows-module:3005/;
    }
    location ~* ^/api/llm-workflows/ {
      # was /api/llm-workflows/
      return 308 /api/v1/workflows$request_uri;
    }

    location /workflows/ {
      # If your app serves at "/" internally, strip the /workflows prefix:
      rewrite ^/workflows/(.*)$ /$1 break;

      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      proxy_read_timeout 86400;
      proxy_pass http://llm-workflows-module:3005/;
    }

    # Legacy UI path -> new UI (keep this for a while)
    # was /llm-workflows/
    rewrite ^/llm-workflows(.*)$ /workflows$1 permanent;  # 301 is fine; use 308 if you prefer
# --- LLM Runner Controller ---
# NEW: /api/llm-runner/ (controller API) and /install/*.sh (installers)
location /api/llm-runner/ {
  proxy_http_version 1.1;
  proxy_buffering off;
  proxy_read_timeout 86400;
  proxy_set_header Host              $host;
  proxy_set_header X-Real-IP         $remote_addr;
  proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
  proxy_set_header X-Forwarded-Proto https;
  proxy_set_header X-Request-Id      $request_id;

  add_header 'Access-Control-Allow-Origin'  $cors_origin always;
  add_header 'Access-Control-Allow-Methods' $cors_methods always;
  add_header 'Access-Control-Allow-Headers' $cors_headers always;
  add_header 'Access-Control-Allow-Credentials' 'true' always;
  if ($request_method = OPTIONS) { return 204; }

  proxy_pass http://llm-runner-controller:4015/api/llm-runner/;
}

location /install/runner.sh {
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_pass http://llm-runner-controller:4015/install/runner.sh;
}
location /install/systemd.sh {
  proxy_http_version 1.1;
  proxy_set_header Host $host;
  proxy_pass http://llm-runner-controller:4015/install/systemd.sh;
}



    # --- LLM Tester ---
    # NEW: /api/v1/tester/...       (old: /api/llm-tester/ and /llm-tester/)
    location /api/v1/tester/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 86400;
      proxy_redirect off;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_set_header Traceparent       $http_traceparent;
      proxy_set_header Tracestate        $http_tracestate;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-tester:3040/;
    }
    location ~* ^/api/llm-tester/ {  # was /api/llm-tester/
      return 308 /api/v1/tester$request_uri;
    }
    location ~* ^/llm-tester/ {      # was /llm-tester/
      return 308 /api/v1/tester$request_uri;
    }

    # --- GitHub Hub ---
    # NEW: /api/v1/github/...       (old: /api/github-hub/)
    location /api/v1/github/ {
      proxy_http_version 1.1;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://github-hub-module:3005/;
    }
    location ~* ^/api/github-hub/ {
      # was /api/github-hub/
      return 308 /api/v1/github$request_uri;
    }

    # --- LLM Documentor ---
    # NEW: /api/v1/documentor/...   (old: /documentor/ and /api/documentor/)
    location /api/v1/documentor/ {
      proxy_http_version 1.1;
      proxy_buffering off; proxy_request_buffering off; proxy_read_timeout 600;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://llm-documentor:3030/;
    }
    location ~* ^/documentor/ {     # was /documentor/
      return 308 /api/v1/documentor$request_uri;
    }
    location ~* ^/api/documentor/ { # was /api/documentor/
      return 308 /api/v1/documentor$request_uri;
    }

    # --- RAG ---
    # NEW: /api/v1/rag/...          (old: /rag/)
    location /api/v1/rag/ {
      proxy_http_version 1.1;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://rag-api-module:8000/;
    }
    location ~* ^/rag/ {  # was /rag/
      return 308 /api/v1/rag$request_uri;
    }

    # --- SSH Terminal (REST + WS) ---
    # NEW: /api/v1/ssh-terminal/...  (old: /api/ssh-terminal/)
    location /api/v1/ssh-terminal/ {
      proxy_http_version 1.1;
      proxy_read_timeout 86400;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;

      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' $cors_methods always;
      add_header 'Access-Control-Allow-Headers' $cors_headers always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      proxy_pass http://ssh-terminal-module:3001/;
    }
    # WebSocket bridge: /api/v1/ssh-terminal/ssh
    location = /api/v1/ssh-terminal/ssh {
      proxy_http_version 1.1;
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_read_timeout 86400;
      proxy_pass http://ssh-terminal-module:3001/ssh;
    }
    location ~* ^/api/ssh-terminal/ {
      # was /api/ssh-terminal/
      return 308 /api/v1/ssh-terminal$request_uri;
    }

    # --- LLM IDE (front + back) ---
    # NEW: /ide/ (same), /api/v1/ide/...
    location /ide/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      add_header 'Access-Control-Allow-Origin'  $cors_origin always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Content-Type, Authorization' always;
      proxy_pass http://llm-ide-frontend:3020/;
    }
    location /api/v1/ide/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto https;
      proxy_set_header X-Request-Id      $request_id;
      proxy_read_timeout 86400;
      proxy_pass http://llm-ide-backend:3021/;
    }
    location ~* ^/ide/api/ {
      # was /ide/api/
      return 308 /api/v1/ide$request_uri;
    }

    # -------- Module-agnostic meta (optional but recommended) --------
    # Expose aggregated docs if you publish them at edge:
    # location = /openapi.yaml { root /usr/share/nginx/html; }  # bundle here in CI
    # location = /docs         { root /usr/share/nginx/html; try_files /docs/index.html =404; }

  }
}
