# framework/nginx.conf
events {
    worker_connections 1024;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;

    sendfile on;
    keepalive_timeout 65;
    
    # Enable CORS for module communication
    map $http_origin $cors_header {
        default "";
        "~^https?://[^/]+\.local(:[0-9]+)?$" "$http_origin";
        "~^https?://localhost(:[0-9]+)?$" "$http_origin";
        "~^https?://127\.0\.0\.1(:[0-9]+)?$" "$http_origin";
        "~^https?://ssh-terminal-module(:[0-9]+)?$" "$http_origin";
        "~^https?://llm-chat-module(:[0-9]+)?$" "$http_origin";

    }

    server {
        listen 80;
        server_name _;
        
        root /usr/share/nginx/html;
        index index.html;

        # Main framework
        location / {
            try_files $uri $uri/ /index.html;
            
            # CORS headers
            add_header 'Access-Control-Allow-Origin' $cors_header always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
            add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
            add_header 'Access-Control-Allow-Credentials' 'true' always;
        }

        # Proxy to SSH Terminal module
        location /api/ssh-terminal/ {
            proxy_pass http://ssh-terminal-module:3001/;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for terminal
            proxy_read_timeout 86400;
        }

        location /api/llm-chat/ {
            proxy_pass http://llm-chat-module:3004/;
            proxy_http_version 1.1;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_read_timeout 86400; # keep SSE streams open
        }

        # Module registration API (handled client-side for now)
        # Uncomment below when framework-api service is added
        # location /api/register {
        #     proxy_pass http://framework-api:3000/register;
        #     proxy_set_header Content-Type application/json;
        # }

        # Module discovery API (handled client-side for now)
        # Uncomment below when framework-api service is added
        # location /api/modules {
        #     proxy_pass http://framework-api:3000/modules;
        # }

        # Health check
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
    }
}