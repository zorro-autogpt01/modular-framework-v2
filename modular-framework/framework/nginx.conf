events { worker_connections 1024; }

http {
  # --- WebSocket upgrade helper ---
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # --- CORS map you already had ---
  map $http_origin $cors_header {
    default "";
    "~^https?://[^/]+\.local(:[0-9]+)?$" "$http_origin";
    "~^https?://localhost(:[0-9]+)?$" "$http_origin";
    "~^https?://127\.0\.0\.1(:[0-9]+)?$" "$http_origin";
    #"~^https?://ssh-terminal-module(:[0-9]+)?$" "$http_origin";
    "~^https?://llm-chat-module(:[0-9]+)?$" "$http_origin";
    "~^https?://github-hub-module(:[0-9]+)?$" "$http_origin";
    "~^https?://browser-module(:[0-9]+)?$" "$http_origin";
    "~^https?://llm-workflows-module(:[0-9]+)?$" "$http_origin";
    "~^https?://llm-gateway(:[0-9]+)?$" "$http_origin";
    "~^https?://logging(:[0-9]+)?$" "$http_origin";
    "~^https?://llm-ide-frontend(:[0-9]+)?$" "$http_origin";
    "~^https?://llm-ide-backend(:[0-9]+)?$" "$http_origin";
  }

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;

  sendfile on;
  keepalive_timeout 65;

  # --- Make Docker service names resolvable at runtime ---
  resolver 127.0.0.11 ipv6=off valid=30s;

  # --- Upstreams (use `resolve` so DNS can change as containers restart) ---
  upstream llm_gateway_upstream {
    zone llm_gateway_zone 64k;
    server llm-gateway:3010 resolve;
  }
  upstream logging_orchestrator_upstream {
    zone logging_zone 64k;
    server logging-orchestrator:3015 resolve;
  }
  upstream rag_upstream {
    zone rag_zone 64k;
    server rag-api-module:8000 resolve;
  }
  upstream llm_chat_upstream {
    zone llm_chat_zone 64k;
    server llm-chat-module:3004 resolve;
  }
  upstream github_hub_upstream {
    zone gh_zone 64k;
    server github-hub-module:3005 resolve;
  }
  upstream browser_upstream {
    zone browser_zone 64k;
    server browser-module:3008 resolve;
  }
  #upstream ssh_terminal_upstream {
  #  zone ssh_zone 64k;
  #  server ssh-terminal-module:3001 resolve;
  #}
  upstream splunk_upstream {
    zone splunk_zone 64k;
    server splunk:8000 resolve;
  }

  server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    location / {
      try_files $uri $uri/ /index.html;
      add_header 'Access-Control-Allow-Origin'      $cors_header always;
      add_header 'Access-Control-Allow-Methods'     'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers'     'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # -------- LLM Workflows (UI + API + SSE) --------
    location /api/llm-workflows/ {
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # SSE / streaming
      proxy_buffering off;
      proxy_read_timeout 86400;

      # Allow embedding in framework panes
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://llm-workflows-module:3005/;
    }

    # -------- Splunk Web UI --------
    location /splunk/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_pass http://splunk_upstream/;
    }

    # -------- LLM Gateway (UI served at /llm-gateway/, API at /llm-gateway/api/*) --------
    location /llm-gateway/ {
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Allow embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      # CORS
      add_header 'Access-Control-Allow-Origin'      $cors_header always;
      add_header 'Access-Control-Allow-Methods'     'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers'     'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

      proxy_read_timeout 86400;
      proxy_pass http://llm_gateway_upstream;
    }

    # API + streaming (e.g., /llm-gateway/api/v1/chat)
    location /llm-gateway/api/ {
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # SSE / long streaming responses
      proxy_buffering off;
      proxy_read_timeout 86400;

      # CORS
      add_header 'Access-Control-Allow-Origin'      $cors_header always;
      add_header 'Access-Control-Allow-Methods'     'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers'     'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

      # Allow embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://llm_gateway_upstream;
    }

    # -------- Central Logging Orchestrator --------
    location /logging/ {
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      # Allow embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      # CORS
      add_header 'Access-Control-Allow-Origin'      $cors_header always;
      add_header 'Access-Control-Allow-Methods'     'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers'     'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

      proxy_read_timeout 86400;
      proxy_pass http://logging_orchestrator_upstream/;

    }

location /api/logging-admin/ {
      proxy_pass http://logging_orchestrator_upstream/api/logging-admin/;
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_buffering off;
      proxy_read_timeout 86400;

      # CORS + embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      add_header 'Access-Control-Allow-Origin'      $cors_header always;
      add_header 'Access-Control-Allow-Methods'     'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers'     'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;

    }

    # -------- GitHub Hub --------
    location /api/github-hub/ {
      proxy_http_version 1.1;
      proxy_set_header Host            $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

      # CORS (optional but useful if the IDE runs on a different port)
      add_header 'Access-Control-Allow-Origin'      $cors_header always;
      add_header 'Access-Control-Allow-Methods'     'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers'     'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      if ($request_method = OPTIONS) { return 204; }

      # If user hits the base path, send them to the module UI under the same prefix
      rewrite ^/api/github-hub/?$ /api/github-hub/ui/ permanent;

      # Fix upstream redirects like "Location: /ui/" â†’ "/api/github-hub/ui/"
      proxy_redirect ~^/ui/(.*)$ /api/github-hub/ui/$1;

      # (keep your embedding headers if you need them)
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://github_hub_upstream/;
    }

    # -------- SSH Terminal (WS upgrade) --------
    #location /api/ssh-terminal/ {
    #  proxy_http_version 1.1;
    #  proxy_set_header Upgrade          $http_upgrade;
    #  proxy_set_header Connection       $connection_upgrade;
    #  proxy_set_header Host             $host;
    #  proxy_set_header X-Real-IP        $remote_addr;
    #  proxy_set_header X-Forwarded-For  $proxy_add_x_forwarded_for;
    #  proxy_set_header X-Forwarded-Proto $scheme;
    #  proxy_cache_bypass $http_upgrade;
    #  proxy_read_timeout 86400;
    #  proxy_pass http://ssh_terminal_upstream/;
    #}

    # -------- LLM Chat --------
    location /api/llm-chat/ {
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_buffering off;
      proxy_read_timeout 86400;

      # Allow embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://llm_chat_upstream/;
    }

    # -------- Browser (KasmVNC, HTTPS + WS) --------
    location /api/browser/ {
      proxy_pass http://browser_upstream/;
      proxy_http_version 1.1;

      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      proxy_set_header Upgrade           $http_upgrade;
      proxy_set_header Connection        $connection_upgrade;

      # Allow embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      client_max_body_size 50m;
    }

    # -------- RAG API --------
    location /rag/ {
      proxy_http_version 1.1;
      proxy_set_header Host              $host;
      proxy_set_header X-Real-IP         $remote_addr;
      proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_read_timeout 86400;

      # Allow embedding
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;

      proxy_pass http://rag_upstream/;
    }

    # -------- Health check --------
    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }
  }
}
