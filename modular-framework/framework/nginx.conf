events { worker_connections 1024; }

http {
  # --- WebSocket upgrade helper ---
  map $http_upgrade $connection_upgrade {
    default upgrade;
    ''      close;
  }

  # --- CORS map you already had ---
  map $http_origin $cors_header {
    default "";
    "~^https?://[^/]+\.local(:[0-9]+)?$" "$http_origin";
    "~^https?://localhost(:[0-9]+)?$" "$http_origin";
    "~^https?://127\.0\.0\.1(:[0-9]+)?$" "$http_origin";
    "~^https?://ssh-terminal-module(:[0-9]+)?$" "$http_origin";
    "~^https?://llm-chat-module(:[0-9]+)?$" "$http_origin";
    "~^https?://github-hub-module(:[0-9]+)?$" "$http_origin";
    "~^https?://browser-module(:[0-9]+)?$" "$http_origin";
  }

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';
  access_log /var/log/nginx/access.log main;
  error_log  /var/log/nginx/error.log warn;
  sendfile on;
  keepalive_timeout 65;

  server {
    listen 80;
    server_name _;

    root /usr/share/nginx/html;
    index index.html;

    location / {
      try_files $uri $uri/ /index.html;
      add_header 'Access-Control-Allow-Origin' $cors_header always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, PUT, DELETE' always;
      add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
    }

    # GitHub Hub
    location /api/github-hub/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_pass http://github-hub-module:3005/;
      proxy_hide_header X-Frame-Options;
      proxy_hide_header Content-Security-Policy;
      add_header X-Frame-Options SAMEORIGIN always;
      add_header Content-Security-Policy "frame-ancestors 'self'" always;
    }

    # SSH Terminal (use upgrade helper too)
    location /api/ssh-terminal/ {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection $connection_upgrade;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_cache_bypass $http_upgrade;
      proxy_read_timeout 86400;
      proxy_pass http://ssh-terminal-module:3001/;
    }

    # LLM Chat
    location /api/llm-chat/ {
      proxy_http_version 1.1;
      proxy_set_header Host $host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
      proxy_read_timeout 86400;
      proxy_pass http://llm-chat-module:3004/;
    }


    # Browser (KasmVNC over HTTPS + WS)
    # WebSocket endpoint when referenced at /api/browser/websockify
    location /api/browser/ {
        proxy_pass http://browser-module:3008/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection $connection_upgrade;

        # Allow embedding in the framework pane
        proxy_hide_header X-Frame-Options;
        proxy_hide_header Content-Security-Policy;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header Content-Security-Policy "frame-ancestors 'self'" always;

        # Optional: bigger pages/uploads via proxy mode
        client_max_body_size 50m;
    }

    location /rag/ {
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_pass http://rag-api-module:8000/;
        proxy_read_timeout 86400;

        # Allow embedding in the framework pane
        proxy_hide_header X-Frame-Options;
        proxy_hide_header Content-Security-Policy;
        add_header X-Frame-Options SAMEORIGIN always;
        add_header Content-Security-Policy "frame-ancestors 'self'" always;
    }


    location /health {
      access_log off;
      return 200 "healthy\n";
      add_header Content-Type text/plain;
    }
  }
}
